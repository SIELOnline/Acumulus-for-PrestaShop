Acumulus module events
=======================

This file documents the events that the Acumulus module defines. Currently only
1 event is defined:


actionAcumulusInvoiceAdd
------------------------

Warning
-------
This event is experimental. Depending on feedback from actual usage, details
may change in future versions.

Description
-----------
The "actionAcumulusInvoiceAdd" event is used to change the invoice that will be
sent to Acumulus. The Acumulus plugin has created the invoice and is about to
send it to Acumulus. But just before doing so, this event allows you to change
details of the invoice as will be sent to Acumulus.

Usage
-----
When the "actionAcumulusInvoiceAdd" event is called, it is passed 2 parameters
in the $params argument:
- 'invoice'(by reference):
  A keyed array containing the invoice that will be sent to Acumulus. The array
  structure is similar to the XML structure as defined on
  https://apidoc.sielsystems.nl/content/invoice-add, though at this stage, only
  the customer key will be present at the highest level. The line tag is
  represented as a numeric array of lines, even if if there is only 1 line.

  Some keys will be missing, if they are still missing after this event has
  been applied, they will be filled in (not overwritten) by the module before
  the actual sending takes place:
  - ['customer']['locationcode']
  - ['customer']['overwriteifexists']
  - ['customer']['type']
  - ['customer']['invoice']['concept']
  - ['customer']['invoice']['accountnumber']
  - ['customer']['invoice']['costcenter']
  - ['customer']['invoice']['template]
  - ['customer']['invoice']['vattype]

  The following keys may be filled with a null value, if the 'unitprice' of that
  'line' = 0. These null values will be replaced by the module by the most
  occurring vat rate before the actual sending takes place:
  - ['customer']['invoice']['line']['taxrate']
- 'order':
  The PrestaShop order object.

Typical usages for this event allow to implement business logic specific to
your business, think of:
- Template, account number, or cost center selection based on order specifics.
- Adding descriptive info to the invoice or invoice lines based on custom order
  meta data.
- Correcting payment info based on payment modules not supported by this module.

Examples
--------
use Siel\Acumulus\Common\WebAPI;

class Custom extends Module {

  public function install() {
    if (!parent::install()
      || !$this->registerHook('actionAcumulusInvoiceAdd')
    ) {
      return false;
    }
    return true;
  }

  public function hookactionAcumulusInvoiceAdd(array $params) {
    // Assign by reference to be able to change the invoice.
    $invoice = &$params['invoice'];
    $order = $params['order'];

    // Make the changes.
    $invoice['test'] = 'test';

    return true;
  }
}

External Resources
------------------
- https://apidoc.sielsystems.nl/content/invoice-add.
- https://apidoc.sielsystems.nl/content/warning-error-and-status-response-section-most-api-calls
