<?php
/**
 * @noinspection PhpUnused
 *
 * Validator says: Missing short description in file comment.
 *
 * @author    Buro RaDer, https://burorader.com/
 * @copyright SIEL BV, https://www.siel.nl/acumulus/
 * @license   GPL v3, see license.txt
 */

declare(strict_types=1);

use Siel\Acumulus\Helpers\Util;

include_once(__DIR__ . '/BaseAdminAcumulusController.php');

/**
 * AdminAcumulusRegisterController provides the invoice status overview form.
 */
class AdminAcumulusInvoiceController extends BaseAdminAcumulusController
{
    public function __construct()
    {
        $this->formType = 'invoice';
        $this->icon = 'process-icon- icon-file-invoice';
        $this->display = 'add';
        parent::__construct();
    }

    /**
     * Processes an ajax call to this form.
     *
     * This method is called by Controller::run() and should process the form
     * submission. Output should be generated by displayAjax().
     *
     * @return bool
     *
     * @throws \Throwable
     */
    public function ajaxProcess(): bool
    {
        // Check where the ajax call came from.
        if (isset($_POST['area'])) {
            switch ($_POST['area']) {
                case 'acumulus-invoice':
                    $this->processSave();
                    break;
                default:
                    $this->jsonError('Error: Area parameter of ajax request unknown to Acumulus.');
            }
        } else {
            $this->jsonError('Error: No area parameter in ajax request for Acumulus.');
        }
        // We do not use the json feature of PS as it gives several warnings.
//        $this->json = true;
        header('Content-Type: application/json;charset=utf-8');
        return true;
    }

    /**
     * Renders the form.
     *
     * This method is called by the call chain:
     * - Controller::run()
     * - AdminController::initContent()
     * And should return the rendered form
     *
     * @return string
     *   The rendered form.
     */
    public function renderForm(): string
    {
        /** @noinspection PhpParamsInspection */
        return $this->module->renderFormInvoice($this->getForm());
    }

    /**
     * {@inheritdoc}
     *
     * @noinspection PhpVariableVariableInspection
     */
    protected function smartyOutputContent($templates): void
    {
        // Prevents:
        // - Notice: Undefined index: hasresult in ...
        // - Notice:  Trying to get property 'value' of non-object in ...
        $this->context->smarty->assign('hasresult', '');
        // Prevents:
        // - Warning:  count(): Parameter must be an array or an object that
        //   implements Countable in ...
        foreach (['errors', 'warnings', 'informations', 'confirmations'] as $type) {
            if (!is_array($this->$type)) {
                $this->$type = (array) $this->$type;
            }
            $this->context->smarty->assign($type, array_unique($this->$type));
        }

        // Below is a simplified version of parent::smartyOutputContent();
        // The json_encode() was added.
        $html = '';
        $html .= $this->context->smarty->fetch($templates, null, $this->getLayout());
        $html = json_encode(['content' => $html], JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE | JSON_THROW_ON_ERROR);
        echo trim($html);
    }


}
